// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview Recommends media services based on viewing history and shopping bag contents.
 *
 * - getServiceRecommendations - A function that handles the service recommendation process.
 * - ServiceRecommendationInput - The input type for the getServiceRecommendations function.
 * - ServiceRecommendationOutput - The return type for the getServiceRecommendations function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const ServiceRecommendationInputSchema = z.object({
  viewingHistory: z.array(
    z.string().describe('IDs of services the user has viewed')
  ).describe('The user viewing history.'),
  shoppingBagContents: z.array(
    z.string().describe('IDs of services in the user shopping bag')
  ).describe('The contents of the user shopping bag.'),
});
export type ServiceRecommendationInput = z.infer<typeof ServiceRecommendationInputSchema>;

const ServiceRecommendationOutputSchema = z.object({
  recommendedServices: z.array(
    z.string().describe('IDs of recommended services')
  ).describe('The recommended services based on user history and shopping bag.'),
});
export type ServiceRecommendationOutput = z.infer<typeof ServiceRecommendationOutputSchema>;

export async function getServiceRecommendations(input: ServiceRecommendationInput): Promise<ServiceRecommendationOutput> {
  return serviceRecommendationFlow(input);
}

const prompt = ai.definePrompt({
  name: 'serviceRecommendationPrompt',
  input: {schema: ServiceRecommendationInputSchema},
  output: {schema: ServiceRecommendationOutputSchema},
  prompt: `You are a service recommendation expert. Based on the user's viewing history and shopping bag contents, recommend services that they might be interested in.

Viewing History: {{#if viewingHistory}}{{{viewingHistory}}}{{else}}No viewing history{{/if}}
Shopping Bag Contents: {{#if shoppingBagContents}}{{{shoppingBagContents}}}{{else}}No shopping bag contents{{/if}}

Recommend services that are related to the viewing history and shopping bag contents.
Ensure that the output is a JSON array of service IDs.`,
});

const serviceRecommendationFlow = ai.defineFlow(
  {
    name: 'serviceRecommendationFlow',
    inputSchema: ServiceRecommendationInputSchema,
    outputSchema: ServiceRecommendationOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
